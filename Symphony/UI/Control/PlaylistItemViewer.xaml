<UserControl
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:Symphony.UI"
             x:Class="Symphony.UI.PlaylistItemViewer"
             mc:Ignorable="d" 
             d:DesignHeight="600" d:DesignWidth="375">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/Symphony;component/UI/Style/DefaultMenu.xaml"/>
                <ResourceDictionary Source="/Symphony;component/UI/Style/ImageButton.xaml"/>
                <ResourceDictionary Source="/Symphony;component/UI/Style/ImageItem.xaml"/>
            </ResourceDictionary.MergedDictionaries>
            <ImageBrush x:Key="Brush_Play" ImageSource="/Symphony;component/Images/sym3_list_icon_play.png" Stretch="None" Opacity="1">
                <ImageBrush.RelativeTransform>
                    <ScaleTransform CenterY="0.5" CenterX="0.5" ScaleX="0.68" ScaleY="0.68"/>
                </ImageBrush.RelativeTransform>
            </ImageBrush>
            <ContextMenu x:Key="ItemMenu" FontFamily="NanumBarunGothic Light" FontSize="14">
                <MenuItem x:Name="ItemMenu_Play" Header="{DynamicResource Lang_Playlist_Item_Play}" Click="ItemMenu_Play_Click" Height="25"/>
                <MenuItem x:Name="ItemMenu_FilePath_Open" Header="{DynamicResource Lang_Playlist_Item_OpenContaionFolder}" Click="ItemMenu_FilePath_Open_Click" Height="25"/>
                <MenuItem x:Name="ItemMenu_Remove" Header="{DynamicResource Lang_Playlist_Item_Remove}" Click="ItemMenu_Remove_Click" Height="25"/>
                <MenuItem x:Name="ItemMenu_Properties" Header="{DynamicResource Lang_Playlist_Item_Properties}" Click="ItemMenu_Properties_Click" Height="25"/>
            </ContextMenu>
            <ContextMenu x:Key="AddMenu" FontFamily="NanumBarunGothic Light" FontSize="14">
                <MenuItem x:Name="AddMenu_File" Header="파일 추가" Click="AddMenu_File_Click"/>
                <MenuItem x:Name="AddMenu_Folder" Header="폴더 추가" Click="AddMenu_Folder_Click"/>
                <MenuItem x:Name="AddMenu_Youtube" Header="유튜브 주소 추가" Click="AddMenu_Youtube_Click"/>
            </ContextMenu>
            <Storyboard x:Key="ViewOff" Timeline.DesiredFrameRate="30">
                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="grid">
                    <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                    <SplineDoubleKeyFrame KeyTime="0:0:0.2" Value="0" KeySpline="1,0,1,1"/>
                </DoubleAnimationUsingKeyFrames>
                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="grid" Storyboard.TargetProperty="Visibility" Duration="0:0:0.25">
                    <DiscreteObjectKeyFrame KeyTime="0:0:0.25">
                        <DiscreteObjectKeyFrame.Value>
                            <Visibility>Hidden</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                    </DiscreteObjectKeyFrame>
                </ObjectAnimationUsingKeyFrames>
                <BooleanAnimationUsingKeyFrames Storyboard.TargetName="grid" Storyboard.TargetProperty="IsHitTestVisible" Duration="0:0:0.25">
                    <DiscreteBooleanKeyFrame KeyTime="0:0:0.25" Value="False" />
                </BooleanAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard x:Key="ViewOn" Timeline.DesiredFrameRate="30">
                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="grid">
                    <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                    <SplineDoubleKeyFrame KeyTime="0:0:0.2" Value="1" KeySpline="0.45,0,0.22,1"/>
                </DoubleAnimationUsingKeyFrames>
                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="grid" Storyboard.TargetProperty="Visibility" Duration="0:0:0.1">
                    <DiscreteObjectKeyFrame KeyTime="0:0:0">
                        <DiscreteObjectKeyFrame.Value>
                            <Visibility>Visible</Visibility>
                        </DiscreteObjectKeyFrame.Value>
                    </DiscreteObjectKeyFrame>
                </ObjectAnimationUsingKeyFrames>
                <BooleanAnimationUsingKeyFrames Storyboard.TargetName="grid" Storyboard.TargetProperty="IsHitTestVisible" Duration="0:0:0.1">
                    <DiscreteBooleanKeyFrame KeyTime="0:0:0" Value="True" />
                </BooleanAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard x:Key="EditOn">
                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Tb_Playlist_Title">
                    <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                    <SplineDoubleKeyFrame KeyTime="0:0:0.4" Value="1" KeySpline="0,0,0,1"/>
                </DoubleAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Lb_Playlist_Title">
                    <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                    <SplineDoubleKeyFrame KeyTime="0:0:0.1" Value="0" KeySpline="0,0,0,1"/>
                </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard x:Key="EditOff">
                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Lb_Playlist_Title">
                    <SplineDoubleKeyFrame KeyTime="0:0:0.3" Value="0"/>
                    <SplineDoubleKeyFrame KeyTime="0:0:0.4" Value="1" KeySpline="0,0,0.1,1"/>
                </DoubleAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Tb_Playlist_Title">
                    <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                    <SplineDoubleKeyFrame KeyTime="0:0:0.3" Value="0" KeySpline="0,0,0.19,1"/>
                </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard x:Key="DragPanelOn" SpeedRatio="2">
                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="Grid_DragPanel">
                    <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
                    <DiscreteObjectKeyFrame KeyTime="0:0:0.3" Value="{x:Static Visibility.Visible}"/>
                </ObjectAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Grid_DragPanel">
                    <SplineDoubleKeyFrame KeyTime="0" Value="0"/>
                    <SplineDoubleKeyFrame KeySpline="0,0,0.06,1" KeyTime="0:0:0.3" Value="1"/>
                </DoubleAnimationUsingKeyFrames>
                <ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Margin)" Storyboard.TargetName="Rect_Remove">
                    <SplineThicknessKeyFrame KeyTime="0" Value="0,0,-45,70"/>
                    <SplineThicknessKeyFrame KeySpline="0,0,0,1" KeyTime="0:0:0.3" Value="0,0,0,70"/>
                </ThicknessAnimationUsingKeyFrames>
                <ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Margin)" Storyboard.TargetName="Rect_Cancel">
                    <SplineThicknessKeyFrame KeyTime="0" Value="0,70,-45,0"/>
                    <SplineThicknessKeyFrame KeySpline="0,0,0,1" KeyTime="0:0:0.3" Value="0,70,0,0"/>
                </ThicknessAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard x:Key="DragPanelOff" SpeedRatio="2">
                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="Grid_DragPanel">
                    <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
                    <DiscreteObjectKeyFrame KeyTime="0:0:0.3" Value="{x:Static Visibility.Visible}"/>
                </ObjectAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Grid_DragPanel">
                    <SplineDoubleKeyFrame KeyTime="0" Value="1"/>
                    <SplineDoubleKeyFrame KeySpline="0.94,0,1,1" KeyTime="0:0:0.3" Value="0"/>
                </DoubleAnimationUsingKeyFrames>
                <ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Margin)" Storyboard.TargetName="Rect_Remove">
                    <SplineThicknessKeyFrame KeyTime="0" Value="0,0,0,70"/>
                    <SplineThicknessKeyFrame KeySpline="1,0,1,1" KeyTime="0:0:0.3" Value="0,0,-45,70"/>
                </ThicknessAnimationUsingKeyFrames>
                <ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Margin)" Storyboard.TargetName="Rect_Cancel">
                    <SplineThicknessKeyFrame KeyTime="0" Value="0,70,0,0"/>
                    <SplineThicknessKeyFrame KeySpline="1,0,1,1" KeyTime="0:0:0.3" Value="0,70,-45,0"/>
                </ThicknessAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard x:Key="DragPanelTrashOn">
                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Storyboard.TargetName="Rect_Remove">
                    <EasingColorKeyFrame KeyTime="0" Value="#28000000"/>
                    <SplineColorKeyFrame KeyTime="0:0:0.3" Value="#7FFF2B2B" KeySpline="0,0,0.4,1"/>
                </ColorAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="Rect_Remove">
                    <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                    <SplineDoubleKeyFrame KeyTime="0:0:0.3" Value="1.1" KeySpline="0,0,0,1"/>
                </DoubleAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)" Storyboard.TargetName="Rect_Remove">
                    <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                    <SplineDoubleKeyFrame KeyTime="0:0:0.3" Value="1.1" KeySpline="0,0,0,1"/>
                </DoubleAnimationUsingKeyFrames>
                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Border.CornerRadius)" Storyboard.TargetName="Rect_Remove">
                    <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                            <CornerRadius>5,0,0,0</CornerRadius>
                        </DiscreteObjectKeyFrame.Value>
                    </DiscreteObjectKeyFrame>
                    <DiscreteObjectKeyFrame KeyTime="0:0:0.042">
                        <DiscreteObjectKeyFrame.Value>
                            <CornerRadius>5,0,0,1</CornerRadius>
                        </DiscreteObjectKeyFrame.Value>
                    </DiscreteObjectKeyFrame>
                    <DiscreteObjectKeyFrame KeyTime="0:0:0.083">
                        <DiscreteObjectKeyFrame.Value>
                            <CornerRadius>5,0,0,2</CornerRadius>
                        </DiscreteObjectKeyFrame.Value>
                    </DiscreteObjectKeyFrame>
                    <DiscreteObjectKeyFrame KeyTime="0:0:0.125">
                        <DiscreteObjectKeyFrame.Value>
                            <CornerRadius>5,0,0,3</CornerRadius>
                        </DiscreteObjectKeyFrame.Value>
                    </DiscreteObjectKeyFrame>
                    <DiscreteObjectKeyFrame KeyTime="0:0:0.208">
                        <DiscreteObjectKeyFrame.Value>
                            <CornerRadius>5,0,0,4</CornerRadius>
                        </DiscreteObjectKeyFrame.Value>
                    </DiscreteObjectKeyFrame>
                    <DiscreteObjectKeyFrame KeyTime="0:0:0.3">
                        <DiscreteObjectKeyFrame.Value>
                            <CornerRadius>5,0,0,5</CornerRadius>
                        </DiscreteObjectKeyFrame.Value>
                    </DiscreteObjectKeyFrame>
                </ObjectAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard x:Key="DragPanelTrashOff">
                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Storyboard.TargetName="Rect_Remove">
                    <SplineColorKeyFrame KeyTime="0" Value="#7FFF2B2B"/>
                    <SplineColorKeyFrame KeySpline="0.6,0,1,1" KeyTime="0:0:0.3" Value="#28000000"/>
                </ColorAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="Rect_Remove">
                    <SplineDoubleKeyFrame KeyTime="0" Value="1.1"/>
                    <SplineDoubleKeyFrame KeySpline="1,0,1,1" KeyTime="0:0:0.3" Value="1"/>
                </DoubleAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)" Storyboard.TargetName="Rect_Remove">
                    <SplineDoubleKeyFrame KeyTime="0" Value="1.1"/>
                    <SplineDoubleKeyFrame KeySpline="1,0,1,1" KeyTime="0:0:0.3" Value="1"/>
                </DoubleAnimationUsingKeyFrames>
                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Border.CornerRadius)" Storyboard.TargetName="Rect_Remove">
                    <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                            <CornerRadius>5,0,0,5</CornerRadius>
                        </DiscreteObjectKeyFrame.Value>
                    </DiscreteObjectKeyFrame>
                    <DiscreteObjectKeyFrame KeyTime="0:0:0.092">
                        <DiscreteObjectKeyFrame.Value>
                            <CornerRadius>5,0,0,4</CornerRadius>
                        </DiscreteObjectKeyFrame.Value>
                    </DiscreteObjectKeyFrame>
                    <DiscreteObjectKeyFrame KeyTime="0:0:0.175">
                        <DiscreteObjectKeyFrame.Value>
                            <CornerRadius>5,0,0,3</CornerRadius>
                        </DiscreteObjectKeyFrame.Value>
                    </DiscreteObjectKeyFrame>
                    <DiscreteObjectKeyFrame KeyTime="0:0:0.217">
                        <DiscreteObjectKeyFrame.Value>
                            <CornerRadius>5,0,0,2</CornerRadius>
                        </DiscreteObjectKeyFrame.Value>
                    </DiscreteObjectKeyFrame>
                    <DiscreteObjectKeyFrame KeyTime="0:0:0.258">
                        <DiscreteObjectKeyFrame.Value>
                            <CornerRadius>5,0,0,1</CornerRadius>
                        </DiscreteObjectKeyFrame.Value>
                    </DiscreteObjectKeyFrame>
                    <DiscreteObjectKeyFrame KeyTime="0:0:0.3">
                        <DiscreteObjectKeyFrame.Value>
                            <CornerRadius>5,0,0,0</CornerRadius>
                        </DiscreteObjectKeyFrame.Value>
                    </DiscreteObjectKeyFrame>
                </ObjectAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard x:Key="DragPanelCancelOn">
                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Storyboard.TargetName="Rect_Cancel">
                    <EasingColorKeyFrame KeyTime="0" Value="#28000000"/>
                    <SplineColorKeyFrame KeyTime="0:0:0.3" Value="#7F19FF6C" KeySpline="0,0,0.4,1"/>
                </ColorAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="Rect_Cancel">
                    <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                    <SplineDoubleKeyFrame KeyTime="0:0:0.3" Value="1.1" KeySpline="0,0,0,1"/>
                </DoubleAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)" Storyboard.TargetName="Rect_Cancel">
                    <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                    <SplineDoubleKeyFrame KeyTime="0:0:0.3" Value="1.1" KeySpline="0,0,0,1"/>
                </DoubleAnimationUsingKeyFrames>
                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Border.CornerRadius)" Storyboard.TargetName="Rect_Cancel">
                    <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                            <CornerRadius>0,0,0,5</CornerRadius>
                        </DiscreteObjectKeyFrame.Value>
                    </DiscreteObjectKeyFrame>
                    <DiscreteObjectKeyFrame KeyTime="0:0:0.042">
                        <DiscreteObjectKeyFrame.Value>
                            <CornerRadius>1,0,0,5</CornerRadius>
                        </DiscreteObjectKeyFrame.Value>
                    </DiscreteObjectKeyFrame>
                    <DiscreteObjectKeyFrame KeyTime="0:0:0.083">
                        <DiscreteObjectKeyFrame.Value>
                            <CornerRadius>2,0,0,5</CornerRadius>
                        </DiscreteObjectKeyFrame.Value>
                    </DiscreteObjectKeyFrame>
                    <DiscreteObjectKeyFrame KeyTime="0:0:0.125">
                        <DiscreteObjectKeyFrame.Value>
                            <CornerRadius>3,0,0,5</CornerRadius>
                        </DiscreteObjectKeyFrame.Value>
                    </DiscreteObjectKeyFrame>
                    <DiscreteObjectKeyFrame KeyTime="0:0:0.208">
                        <DiscreteObjectKeyFrame.Value>
                            <CornerRadius>4,0,0,5</CornerRadius>
                        </DiscreteObjectKeyFrame.Value>
                    </DiscreteObjectKeyFrame>
                    <DiscreteObjectKeyFrame KeyTime="0:0:0.3">
                        <DiscreteObjectKeyFrame.Value>
                            <CornerRadius>5,0,0,5</CornerRadius>
                        </DiscreteObjectKeyFrame.Value>
                    </DiscreteObjectKeyFrame>
                </ObjectAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard x:Key="DragPanelCancelOff">
                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Storyboard.TargetName="Rect_Cancel">
                    <SplineColorKeyFrame KeyTime="0" Value="#7F19FF6C"/>
                    <SplineColorKeyFrame KeySpline="0.6,0,1,1" KeyTime="0:0:0.3" Value="#28000000"/>
                </ColorAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="Rect_Cancel">
                    <SplineDoubleKeyFrame KeyTime="0" Value="1.1"/>
                    <SplineDoubleKeyFrame KeySpline="1,0,1,1" KeyTime="0:0:0.3" Value="1"/>
                </DoubleAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)" Storyboard.TargetName="Rect_Cancel">
                    <SplineDoubleKeyFrame KeyTime="0" Value="1.1"/>
                    <SplineDoubleKeyFrame KeySpline="1,0,1,1" KeyTime="0:0:0.3" Value="1"/>
                </DoubleAnimationUsingKeyFrames>
                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Border.CornerRadius)" Storyboard.TargetName="Rect_Cancel">
                    <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                            <CornerRadius>5,0,0,5</CornerRadius>
                        </DiscreteObjectKeyFrame.Value>
                    </DiscreteObjectKeyFrame>
                    <DiscreteObjectKeyFrame KeyTime="0:0:0.092">
                        <DiscreteObjectKeyFrame.Value>
                            <CornerRadius>4,0,0,5</CornerRadius>
                        </DiscreteObjectKeyFrame.Value>
                    </DiscreteObjectKeyFrame>
                    <DiscreteObjectKeyFrame KeyTime="0:0:0.175">
                        <DiscreteObjectKeyFrame.Value>
                            <CornerRadius>3,0,0,5</CornerRadius>
                        </DiscreteObjectKeyFrame.Value>
                    </DiscreteObjectKeyFrame>
                    <DiscreteObjectKeyFrame KeyTime="0:0:0.217">
                        <DiscreteObjectKeyFrame.Value>
                            <CornerRadius>2,0,0,5</CornerRadius>
                        </DiscreteObjectKeyFrame.Value>
                    </DiscreteObjectKeyFrame>
                    <DiscreteObjectKeyFrame KeyTime="0:0:0.258">
                        <DiscreteObjectKeyFrame.Value>
                            <CornerRadius>1,0,0,5</CornerRadius>
                        </DiscreteObjectKeyFrame.Value>
                    </DiscreteObjectKeyFrame>
                    <DiscreteObjectKeyFrame KeyTime="0:0:0.3">
                        <DiscreteObjectKeyFrame.Value>
                            <CornerRadius>0,0,0,5</CornerRadius>
                        </DiscreteObjectKeyFrame.Value>
                    </DiscreteObjectKeyFrame>
                </ObjectAnimationUsingKeyFrames>
            </Storyboard>
        </ResourceDictionary>
    </UserControl.Resources>
    <UserControl.Triggers>
        <EventTrigger RoutedEvent="UIElement.DragEnter" SourceName="Rect_Remove">
            <BeginStoryboard x:Name="DragPanelTrashOn_BeginStoryboard" Storyboard="{StaticResource DragPanelTrashOn}"/>
        </EventTrigger>
        <EventTrigger RoutedEvent="UIElement.DragLeave" SourceName="Rect_Remove">
            <BeginStoryboard x:Name="DragPanelTrashOff_BeginStoryboard" Storyboard="{StaticResource DragPanelTrashOff}"/>
        </EventTrigger>
        <EventTrigger RoutedEvent="UIElement.DragEnter" SourceName="Rect_Cancel">
            <BeginStoryboard x:Name="DragPanelCancelOn_BeginStoryboard" Storyboard="{StaticResource DragPanelCancelOn}"/>
        </EventTrigger>
        <EventTrigger RoutedEvent="UIElement.DragLeave" SourceName="Rect_Cancel">
            <BeginStoryboard x:Name="DragPanelCancelOff_BeginStoryboard" Storyboard="{StaticResource DragPanelCancelOff}"/>
        </EventTrigger>
    </UserControl.Triggers>
    <Grid x:Name="grid">
        <Grid x:Name="Grid_Menu" VerticalAlignment="Top" Height="35" Margin="0,-1,0,0" Background="{DynamicResource Theme_PlaylistItem_Header_Background}">
            <StackPanel Orientation="Horizontal" Height="35" Width="135" HorizontalAlignment="Left" RenderOptions.BitmapScalingMode="LowQuality" RenderOptions.CachingHint="Cache">
                <Button Style="{StaticResource ImageButton}" x:Name="Bt_Go_Back" Width="28" Margin="8,0,0,0" Click="Bt_Go_Back_Click">
                    <Button.Background>
                        <ImageBrush ImageSource="/Symphony;component/Images/sym3_list_icon_goback.png" Stretch="None">
                            <ImageBrush.RelativeTransform>
                                <TransformGroup>
                                    <ScaleTransform CenterY="0.5" CenterX="0.5" ScaleX="0.7" ScaleY="0.7"/>
                                    <SkewTransform CenterY="0.5" CenterX="0.5"/>
                                    <RotateTransform CenterY="0.5" CenterX="0.5"/>
                                    <TranslateTransform/>
                                </TransformGroup>
                            </ImageBrush.RelativeTransform>
                        </ImageBrush>
                    </Button.Background>
                </Button>
                <Button Style="{StaticResource ImageItem}" x:Name="Bt_Add_Item" ContextMenu="{DynamicResource AddMenu}" Width="43" Margin="4,0,4,0" BorderBrush="#72FFFFFF" Background="#19000000" Click="Bt_Add_Item_Click" ToolTip="{DynamicResource Lang_Playlist_Open}">
                    <Button.Foreground>
                        <ImageBrush Stretch="None" ImageSource="/Symphony;component/Images/sym3_playlist_lists_control_new.png">
                            <ImageBrush.RelativeTransform>
                                <TransformGroup>
                                    <ScaleTransform CenterY="0.5" CenterX="0.5" ScaleX="0.7" ScaleY="0.7"/>
                                    <SkewTransform CenterY="0.5" CenterX="0.5"/>
                                    <RotateTransform CenterY="0.5" CenterX="0.5"/>
                                    <TranslateTransform/>
                                </TransformGroup>
                            </ImageBrush.RelativeTransform>
                        </ImageBrush>
                    </Button.Foreground>
                </Button>
                <Button Style="{StaticResource ImageItem}" x:Name="Bt_Delete" Width="43" Margin="4,0,4,0" Background="#19000000" BorderBrush="#72FFFFFF" Click="Bt_Delete_Click" ToolTip="{DynamicResource Lang_Playlist_Remove}">
                    <Button.Foreground>
                        <ImageBrush Stretch="None" ImageSource="/Symphony;component/Images/sym3_playlist_lists_control_exit.png">
                            <ImageBrush.RelativeTransform>
                                <TransformGroup>
                                    <ScaleTransform CenterY="0.5" CenterX="0.5" ScaleX="0.62" ScaleY="0.62"/>
                                    <SkewTransform CenterY="0.5" CenterX="0.5"/>
                                    <RotateTransform CenterY="0.5" CenterX="0.5"/>
                                    <TranslateTransform/>
                                </TransformGroup>
                            </ImageBrush.RelativeTransform>
                        </ImageBrush>
                    </Button.Foreground>
                </Button>
            </StackPanel>
            <TextBlock x:Name="Lb_Playlist_Title" TextOptions.TextFormattingMode="Ideal" TextOptions.TextHintingMode="Fixed" TextOptions.TextRenderingMode="Grayscale" Visibility="Visible" SnapsToDevicePixels="True" UseLayoutRounding="True" Text="Default" TextTrimming="CharacterEllipsis" ToolTip="{Binding Mode=OneWay, ElementName=Lb_Playlist_Title, Path=Text}" TextAlignment="Right" VerticalAlignment="Center" Margin="140,8,5,8" FontSize="17" Foreground="{DynamicResource Theme_PlaylistItem_Header_TextColor}" FontFamily="NanumBarunGothic" Opacity="1" MouseLeftButtonDown="Lb_Playlist_Title_MouseLeftButtonDown" Effect="{DynamicResource Theme_PlaylistItem_Header_TextEffect}"/>
            <TextBox Opacity="0" Visibility="Hidden" x:Name="Tb_Playlist_Title" Margin="140,5,5,5" VerticalAlignment="Center" SelectionBrush="#FF33AFFF" TextAlignment="Right" FontSize="17" FontFamily="NanumBarunGothic" Background="#38000000" BorderBrush="#A8ABABAB" Foreground="White" TextChanged="Tb_Playlist_Title_TextChanged" LostFocus="Tb_Playlist_Title_LostFocus" KeyDown="Tb_Playlist_Title_KeyDown">
                <TextBox.Resources>
                    <ResourceDictionary>
                        <ResourceDictionary.MergedDictionaries>
                            <ResourceDictionary Source="/Symphony;component/UI/Style/ToolTip.xaml"/>
                            <ResourceDictionary Source="/Symphony;component/UI/Style/DefaultMenu.xaml"/>
                        </ResourceDictionary.MergedDictionaries>
                    </ResourceDictionary>
                </TextBox.Resources>
            </TextBox>
            <Line X1="0" Y1="0" X2="{Binding ActualWidth, ElementName=Grid_Menu, Mode=OneWay}"  Y2="0" HorizontalAlignment="Stretch" VerticalAlignment="Bottom" Stroke="{DynamicResource Theme_PlaylistItem_Header_Border}" StrokeThickness="1"/>
            <Grid.CacheMode>
                <BitmapCache/>
            </Grid.CacheMode>
        </Grid>
        <Grid Margin="0,34,0,0" ClipToBounds="True" Background="{DynamicResource Theme_PlaylistItem_Background}" UseLayoutRounding="True">
            <ListView x:Name="lstData" PreviewMouseLeftButtonDown="lstData_PreviewMouseLeftButtonDown" PreviewMouseMove="lstData_PreviewMouseMove" MouseLeave="lstData_MouseLeave" SelectionMode="Extended" AllowDrop="True" Drop="lstData_Drop" Margin="0" BorderBrush="{x:Null}" Background="{x:Null}" FontFamily="NanumBarunGothic Light" Foreground="{DynamicResource Theme_PlaylistItem_List_Text}" SnapsToDevicePixels="True" Style="{DynamicResource ListViewStyle}" KeyDown="lstData_KeyDown">
                <ListView.Resources>
                    <Style TargetType="{x:Type GridViewColumnHeader}">
                        <Setter Property="HorizontalAlignment" Value="Stretch"/>
                        <Setter Property="VerticalAlignment" Value="Center" />
                        <Setter Property="Foreground" Value="White" />
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type GridViewColumnHeader}">
                                    <Grid Height="37" HorizontalAlignment="Stretch">
                                        <Grid.CacheMode>
                                            <BitmapCache/>
                                        </Grid.CacheMode>
                                        <ContentPresenter VerticalAlignment="Bottom" Margin="9,0,9,4" Effect="{DynamicResource Theme_PlaylistItem_List_Header_TextEffect}"/>
                                        <Thumb x:Name="PART_HeaderGripper" HorizontalAlignment="Right" Width="5" Cursor="IBeam">
                                            <Thumb.Style>
                                                <Style TargetType="{x:Type Thumb}">
                                                    <Setter Property="Template">
                                                        <Setter.Value>
                                                            <ControlTemplate TargetType="{x:Type Thumb}">
                                                                <Grid>
                                                                    <Rectangle Fill="#01000000" Width="5" HorizontalAlignment="Left" VerticalAlignment="Center" Height="30"/>
                                                                    <Rectangle Fill="{DynamicResource Theme_PlaylistItem_List_Header_Spliter}" Width="1" HorizontalAlignment="Left" Margin="4,0,0,0" VerticalAlignment="Center" Height="30"/>
                                                                </Grid>
                                                            </ControlTemplate>
                                                        </Setter.Value>
                                                    </Setter>
                                                </Style>
                                            </Thumb.Style>
                                        </Thumb>
                                        <Rectangle Height="1" Fill="{DynamicResource Theme_PlaylistItem_List_Header_Border}" HorizontalAlignment="Stretch" VerticalAlignment="Bottom"/>
                                    </Grid>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                    <Style x:Key="ListViewStyle" TargetType="{x:Type ListView}">
                        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                        <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
                        <Setter Property="BorderBrush" Value="{x:Null}"/>
                        <Setter Property="BorderThickness" Value="0"/>
                        <Setter Property="Foreground" Value="#FF042271"/>
                        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
                        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
                        <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
                        <Setter Property="ScrollViewer.IsDeferredScrollingEnabled" Value="False"/>
                        <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
                        <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
                        <Setter Property="VirtualizingPanel.IsVirtualizing" Value="True"/>
                        <Setter Property="VirtualizingPanel.VirtualizationMode" Value="Recycling"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type ListView}">
                                    <ScrollViewer x:Name="scrollViewer" Padding="{TemplateBinding Padding}" Style="{DynamicResource ScrollViewerStyle}" ScrollChanged="ScrollViewer_ScrollChanged">
                                        <ScrollViewer.Resources>
                                            <Style x:Key="ScrollViewerStyle" TargetType="{x:Type ScrollViewer}">
                                                <Setter Property="Focusable" Value="False"/>
                                                <Setter Property="Template">
                                                    <Setter.Value>
                                                        <ControlTemplate TargetType="{x:Type ScrollViewer}">
                                                            <ControlTemplate.Resources>
                                                                <Storyboard x:Key="PART_HorizontalScrollBarOn" Timeline.DesiredFrameRate="30">
                                                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="PART_HorizontalScrollBar">
                                                                        <EasingDoubleKeyFrame KeyTime="0" Value="0.3"/>
                                                                        <SplineDoubleKeyFrame KeyTime="0:0:0.2" Value="1" KeySpline="0,0,0,1"/>
                                                                    </DoubleAnimationUsingKeyFrames>
                                                                </Storyboard>
                                                                <Storyboard x:Key="PART_HorizontalScrollBarOff" Timeline.DesiredFrameRate="30">
                                                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="PART_HorizontalScrollBar">
                                                                        <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                                                                        <SplineDoubleKeyFrame KeyTime="0:0:0.2" Value="0.3" KeySpline="0,0,0,1"/>
                                                                    </DoubleAnimationUsingKeyFrames>
                                                                </Storyboard>
                                                                <Storyboard x:Key="PART_VerticalScrollBarOn" Timeline.DesiredFrameRate="30">
                                                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="PART_VerticalScrollBar">
                                                                        <EasingDoubleKeyFrame KeyTime="0" Value="0.3"/>
                                                                        <SplineDoubleKeyFrame KeyTime="0:0:0.2" Value="1" KeySpline="0,0,0,1"/>
                                                                    </DoubleAnimationUsingKeyFrames>
                                                                </Storyboard>
                                                                <Storyboard x:Key="PART_VerticalScrollBarOff" Timeline.DesiredFrameRate="30">
                                                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="PART_VerticalScrollBar">
                                                                        <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                                                                        <SplineDoubleKeyFrame KeyTime="0:0:0.2" Value="0.3" KeySpline="0,0,0,1"/>
                                                                    </DoubleAnimationUsingKeyFrames>
                                                                </Storyboard>
                                                                <SolidColorBrush x:Key="ScrollBar.Static.Background" Color="#63000000"/>
                                                                <SolidColorBrush x:Key="ScrollBar.Static.Background1" Color="#bcffffff"/>
                                                                <SolidColorBrush x:Key="ScrollBar.Static.Border" Color="#63000000"/>
                                                                <SolidColorBrush x:Key="ScrollBar.Pressed.Glyph" Color="#633d3d3d"/>
                                                                <SolidColorBrush x:Key="ScrollBar.MouseOver.Glyph" Color="#000000"/>
                                                                <SolidColorBrush x:Key="ScrollBar.Disabled.Glyph" Color="#BFBFBF"/>
                                                                <SolidColorBrush x:Key="ScrollBar.Static.Glyph" Color="#63000000"/>
                                                                <SolidColorBrush x:Key="ScrollBar.MouseOver.Background" Color="#bcdbdbdb"/>
                                                                <SolidColorBrush x:Key="ScrollBar.MouseOver.Border" Color="#bcdbdbdb"/>
                                                                <SolidColorBrush x:Key="ScrollBar.Pressed.Background" Color="#bceaeaea"/>
                                                                <SolidColorBrush x:Key="ScrollBar.Pressed.Border" Color="#bceaeaea"/>
                                                                <SolidColorBrush x:Key="ScrollBar.Disabled.Background" Color="#bcffffff"/>
                                                                <SolidColorBrush x:Key="ScrollBar.Disabled.Border" Color="#bcffffff"/>
                                                                <Style x:Key="ScrollBarButton" TargetType="{x:Type RepeatButton}">
                                                                    <Setter Property="BorderThickness" Value="0"/>
                                                                    <Setter Property="HorizontalContentAlignment" Value="Center"/>
                                                                    <Setter Property="VerticalContentAlignment" Value="Center"/>
                                                                    <Setter Property="Padding" Value="0"/>
                                                                    <Setter Property="Focusable" Value="false"/>
                                                                    <Setter Property="IsTabStop" Value="false"/>
                                                                    <Setter Property="Template">
                                                                        <Setter.Value>
                                                                            <ControlTemplate TargetType="{x:Type RepeatButton}">
                                                                                <Border x:Name="border" BorderBrush="{x:Null}" BorderThickness="0" Background="{StaticResource ScrollBar.Static.Background1}" SnapsToDevicePixels="true">
                                                                                    <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                                                </Border>
                                                                                <ControlTemplate.Triggers>
                                                                                    <Trigger Property="IsMouseOver" Value="true">
                                                                                        <Setter Property="Background" TargetName="border" Value="{StaticResource ScrollBar.MouseOver.Background}"/>
                                                                                        <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource ScrollBar.MouseOver.Border}"/>
                                                                                    </Trigger>
                                                                                    <Trigger Property="IsPressed" Value="true">
                                                                                        <Setter Property="Background" TargetName="border" Value="{StaticResource ScrollBar.Pressed.Background}"/>
                                                                                        <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource ScrollBar.Pressed.Border}"/>
                                                                                    </Trigger>
                                                                                    <Trigger Property="IsEnabled" Value="false">
                                                                                        <Setter Property="Opacity" TargetName="contentPresenter" Value="0.56"/>
                                                                                        <Setter Property="Background" TargetName="border" Value="{StaticResource ScrollBar.Disabled.Background}"/>
                                                                                        <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource ScrollBar.Disabled.Border}"/>
                                                                                    </Trigger>
                                                                                </ControlTemplate.Triggers>
                                                                            </ControlTemplate>
                                                                        </Setter.Value>
                                                                    </Setter>
                                                                </Style>
                                                                <Style x:Key="RepeatButtonTransparent" TargetType="{x:Type RepeatButton}">
                                                                    <Setter Property="OverridesDefaultStyle" Value="true"/>
                                                                    <Setter Property="Background" Value="Transparent"/>
                                                                    <Setter Property="Focusable" Value="false"/>
                                                                    <Setter Property="IsTabStop" Value="false"/>
                                                                    <Setter Property="Template">
                                                                        <Setter.Value>
                                                                            <ControlTemplate TargetType="{x:Type RepeatButton}">
                                                                                <Rectangle Fill="{TemplateBinding Background}" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}"/>
                                                                            </ControlTemplate>
                                                                        </Setter.Value>
                                                                    </Setter>
                                                                </Style>
                                                                <SolidColorBrush x:Key="ScrollBar.MouseOver.Thumb" Color="#aed4d4d4"/>
                                                                <SolidColorBrush x:Key="ScrollBar.Pressed.Thumb" Color="#aef1f1f1"/>
                                                                <SolidColorBrush x:Key="ScrollBar.Static.Thumb" Color="#aeffffff"/>
                                                                <Style x:Key="ScrollBarThumbVertical" TargetType="{x:Type Thumb}">
                                                                    <Setter Property="OverridesDefaultStyle" Value="true"/>
                                                                    <Setter Property="IsTabStop" Value="false"/>
                                                                    <Setter Property="Template">
                                                                        <Setter.Value>
                                                                            <ControlTemplate TargetType="{x:Type Thumb}">
                                                                                <Rectangle x:Name="rectangle" Fill="{StaticResource ScrollBar.Static.Thumb}" Height="{TemplateBinding Height}" SnapsToDevicePixels="True" Width="{TemplateBinding Width}"/>
                                                                                <ControlTemplate.Triggers>
                                                                                    <Trigger Property="IsMouseOver" Value="true">
                                                                                        <Setter Property="Fill" TargetName="rectangle" Value="{StaticResource ScrollBar.MouseOver.Thumb}"/>
                                                                                    </Trigger>
                                                                                    <Trigger Property="IsDragging" Value="true">
                                                                                        <Setter Property="Fill" TargetName="rectangle" Value="{StaticResource ScrollBar.Pressed.Thumb}"/>
                                                                                    </Trigger>
                                                                                </ControlTemplate.Triggers>
                                                                            </ControlTemplate>
                                                                        </Setter.Value>
                                                                    </Setter>
                                                                </Style>
                                                                <Style x:Key="ScrollBarThumbHorizontal" TargetType="{x:Type Thumb}">
                                                                    <Setter Property="OverridesDefaultStyle" Value="true"/>
                                                                    <Setter Property="IsTabStop" Value="false"/>
                                                                    <Setter Property="Template">
                                                                        <Setter.Value>
                                                                            <ControlTemplate TargetType="{x:Type Thumb}">
                                                                                <Rectangle x:Name="rectangle" Fill="{StaticResource ScrollBar.Static.Thumb}" Height="{TemplateBinding Height}" SnapsToDevicePixels="True" Width="{TemplateBinding Width}"/>
                                                                                <ControlTemplate.Triggers>
                                                                                    <Trigger Property="IsMouseOver" Value="true">
                                                                                        <Setter Property="Fill" TargetName="rectangle" Value="{StaticResource ScrollBar.MouseOver.Thumb}"/>
                                                                                    </Trigger>
                                                                                    <Trigger Property="IsDragging" Value="true">
                                                                                        <Setter Property="Fill" TargetName="rectangle" Value="{StaticResource ScrollBar.Pressed.Thumb}"/>
                                                                                    </Trigger>
                                                                                </ControlTemplate.Triggers>
                                                                            </ControlTemplate>
                                                                        </Setter.Value>
                                                                    </Setter>
                                                                </Style>
                                                                <Style x:Key="ScrollBarStyle1" TargetType="{x:Type ScrollBar}">
                                                                    <Setter Property="Stylus.IsPressAndHoldEnabled" Value="false"/>
                                                                    <Setter Property="Stylus.IsFlicksEnabled" Value="false"/>
                                                                    <Setter Property="Background" Value="{StaticResource ScrollBar.Static.Background}"/>
                                                                    <Setter Property="BorderBrush" Value="{StaticResource ScrollBar.Static.Border}"/>
                                                                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                                                                    <Setter Property="BorderThickness" Value="1,0"/>
                                                                    <Setter Property="Width" Value="14"/>
                                                                    <Setter Property="MinWidth" Value="14"/>
                                                                    <Setter Property="Template">
                                                                        <Setter.Value>
                                                                            <ControlTemplate TargetType="{x:Type ScrollBar}">
                                                                                <Grid x:Name="Bg" SnapsToDevicePixels="true">
                                                                                    <Grid.RowDefinitions>
                                                                                        <RowDefinition MaxHeight="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}"/>
                                                                                        <RowDefinition Height="0.00001*"/>
                                                                                        <RowDefinition MaxHeight="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}"/>
                                                                                    </Grid.RowDefinitions>
                                                                                    <Border BorderThickness="0" Background="{TemplateBinding Background}" Grid.Row="1"/>
                                                                                    <RepeatButton x:Name="PART_LineUpButton" Command="{x:Static ScrollBar.LineUpCommand}" IsEnabled="{TemplateBinding IsMouseOver}" Style="{StaticResource ScrollBarButton}">
                                                                                        <Path x:Name="ArrowTop" Data="M 0,4 C0,4 0,6 0,6 0,6 3.5,2.5 3.5,2.5 3.5,2.5 7,6 7,6 7,6 7,4 7,4 7,4 3.5,0.5 3.5,0.5 3.5,0.5 0,4 0,4 z" Fill="{StaticResource ScrollBar.Static.Glyph}" Margin="3,4,3,3" IsHitTestVisible="False" Stretch="Uniform"/>
                                                                                    </RepeatButton>
                                                                                    <Track x:Name="PART_Track" IsDirectionReversed="true" IsEnabled="{TemplateBinding IsMouseOver}" Grid.Row="1">
                                                                                        <Track.DecreaseRepeatButton>
                                                                                            <RepeatButton Command="{x:Static ScrollBar.PageUpCommand}" Style="{StaticResource RepeatButtonTransparent}"/>
                                                                                        </Track.DecreaseRepeatButton>
                                                                                        <Track.IncreaseRepeatButton>
                                                                                            <RepeatButton Command="{x:Static ScrollBar.PageDownCommand}" Style="{StaticResource RepeatButtonTransparent}"/>
                                                                                        </Track.IncreaseRepeatButton>
                                                                                        <Track.Thumb>
                                                                                            <Thumb Style="{StaticResource ScrollBarThumbVertical}"/>
                                                                                        </Track.Thumb>
                                                                                    </Track>
                                                                                    <RepeatButton x:Name="PART_LineDownButton" Command="{x:Static ScrollBar.LineDownCommand}" IsEnabled="{TemplateBinding IsMouseOver}" Grid.Row="2" Style="{StaticResource ScrollBarButton}">
                                                                                        <Path x:Name="ArrowBottom" Data="M 0,2.5 C0,2.5 0,0.5 0,0.5 0,0.5 3.5,4 3.5,4 3.5,4 7,0.5 7,0.5 7,0.5 7,2.5 7,2.5 7,2.5 3.5,6 3.5,6 3.5,6 0,2.5 0,2.5 z" IsHitTestVisible="False" Fill="{StaticResource ScrollBar.Static.Glyph}" Margin="3,4,3,3" Stretch="Uniform"/>
                                                                                    </RepeatButton>
                                                                                </Grid>
                                                                                <ControlTemplate.Triggers>
                                                                                    <MultiDataTrigger>
                                                                                        <MultiDataTrigger.Conditions>
                                                                                            <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineDownButton, Mode=OneWay}" Value="true"/>
                                                                                            <Condition Binding="{Binding IsPressed, ElementName=PART_LineDownButton, Mode=OneWay}" Value="true"/>
                                                                                        </MultiDataTrigger.Conditions>
                                                                                        <Setter Property="Fill" TargetName="ArrowBottom" Value="{StaticResource ScrollBar.Pressed.Glyph}"/>
                                                                                    </MultiDataTrigger>
                                                                                    <MultiDataTrigger>
                                                                                        <MultiDataTrigger.Conditions>
                                                                                            <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineUpButton, Mode=OneWay}" Value="true"/>
                                                                                            <Condition Binding="{Binding IsPressed, ElementName=PART_LineUpButton, Mode=OneWay}" Value="true"/>
                                                                                        </MultiDataTrigger.Conditions>
                                                                                        <Setter Property="Fill" TargetName="ArrowTop" Value="{StaticResource ScrollBar.Pressed.Glyph}"/>
                                                                                    </MultiDataTrigger>
                                                                                    <MultiDataTrigger>
                                                                                        <MultiDataTrigger.Conditions>
                                                                                            <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineDownButton, Mode=OneWay}" Value="true"/>
                                                                                            <Condition Binding="{Binding IsPressed, ElementName=PART_LineDownButton, Mode=OneWay}" Value="false"/>
                                                                                        </MultiDataTrigger.Conditions>
                                                                                        <Setter Property="Fill" TargetName="ArrowBottom" Value="{StaticResource ScrollBar.MouseOver.Glyph}"/>
                                                                                    </MultiDataTrigger>
                                                                                    <MultiDataTrigger>
                                                                                        <MultiDataTrigger.Conditions>
                                                                                            <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineUpButton, Mode=OneWay}" Value="true"/>
                                                                                            <Condition Binding="{Binding IsPressed, ElementName=PART_LineUpButton, Mode=OneWay}" Value="false"/>
                                                                                        </MultiDataTrigger.Conditions>
                                                                                        <Setter Property="Fill" TargetName="ArrowTop" Value="{StaticResource ScrollBar.MouseOver.Glyph}"/>
                                                                                    </MultiDataTrigger>
                                                                                    <Trigger Property="IsEnabled" Value="false">
                                                                                        <Setter Property="Fill" TargetName="ArrowTop" Value="{StaticResource ScrollBar.Disabled.Glyph}"/>
                                                                                        <Setter Property="Fill" TargetName="ArrowBottom" Value="{StaticResource ScrollBar.Disabled.Glyph}"/>
                                                                                    </Trigger>
                                                                                </ControlTemplate.Triggers>
                                                                            </ControlTemplate>
                                                                        </Setter.Value>
                                                                    </Setter>
                                                                    <Style.Triggers>
                                                                        <Trigger Property="Orientation" Value="Horizontal">
                                                                            <Setter Property="Width" Value="Auto"/>
                                                                            <Setter Property="MinWidth" Value="0"/>
                                                                            <Setter Property="Height" Value="14"/>
                                                                            <Setter Property="MinHeight" Value="14"/>
                                                                            <Setter Property="BorderThickness" Value="0,1"/>
                                                                            <Setter Property="Template">
                                                                                <Setter.Value>
                                                                                    <ControlTemplate TargetType="{x:Type ScrollBar}">
                                                                                        <Grid x:Name="Bg" SnapsToDevicePixels="true">
                                                                                            <Grid.ColumnDefinitions>
                                                                                                <ColumnDefinition MaxWidth="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}}"/>
                                                                                                <ColumnDefinition Width="0.00001*"/>
                                                                                                <ColumnDefinition MaxWidth="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}}"/>
                                                                                            </Grid.ColumnDefinitions>
                                                                                            <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.Column="1"/>
                                                                                            <RepeatButton x:Name="PART_LineLeftButton" Command="{x:Static ScrollBar.LineLeftCommand}" IsEnabled="{TemplateBinding IsMouseOver}" Style="{StaticResource ScrollBarButton}">
                                                                                                <Path x:Name="ArrowLeft" Data="M 3.18,7 C3.18,7 5,7 5,7 5,7 1.81,3.5 1.81,3.5 1.81,3.5 5,0 5,0 5,0 3.18,0 3.18,0 3.18,0 0,3.5 0,3.5 0,3.5 3.18,7 3.18,7 z" IsHitTestVisible="False" Fill="{StaticResource ScrollBar.Static.Glyph}" Margin="3" Stretch="Uniform"/>
                                                                                            </RepeatButton>
                                                                                            <Track x:Name="PART_Track" Grid.Column="1" IsEnabled="{TemplateBinding IsMouseOver}">
                                                                                                <Track.DecreaseRepeatButton>
                                                                                                    <RepeatButton Command="{x:Static ScrollBar.PageLeftCommand}" Style="{StaticResource RepeatButtonTransparent}"/>
                                                                                                </Track.DecreaseRepeatButton>
                                                                                                <Track.IncreaseRepeatButton>
                                                                                                    <RepeatButton Command="{x:Static ScrollBar.PageRightCommand}" Style="{StaticResource RepeatButtonTransparent}"/>
                                                                                                </Track.IncreaseRepeatButton>
                                                                                                <Track.Thumb>
                                                                                                    <Thumb Style="{StaticResource ScrollBarThumbHorizontal}"/>
                                                                                                </Track.Thumb>
                                                                                            </Track>
                                                                                            <RepeatButton x:Name="PART_LineRightButton" Grid.Column="2" Command="{x:Static ScrollBar.LineRightCommand}" IsEnabled="{TemplateBinding IsMouseOver}" Style="{StaticResource ScrollBarButton}">
                                                                                                <Path x:Name="ArrowRight" Data="M 1.81,7 C1.81,7 0,7 0,7 0,7 3.18,3.5 3.18,3.5 3.18,3.5 0,0 0,0 0,0 1.81,0 1.81,0 1.81,0 5,3.5 5,3.5 5,3.5 1.81,7 1.81,7 z" IsHitTestVisible="False" Fill="{StaticResource ScrollBar.Static.Glyph}" Margin="3" Stretch="Uniform"/>
                                                                                            </RepeatButton>
                                                                                        </Grid>
                                                                                        <ControlTemplate.Triggers>
                                                                                            <MultiDataTrigger>
                                                                                                <MultiDataTrigger.Conditions>
                                                                                                    <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineRightButton, Mode=OneWay}" Value="true"/>
                                                                                                    <Condition Binding="{Binding IsPressed, ElementName=PART_LineRightButton, Mode=OneWay}" Value="true"/>
                                                                                                </MultiDataTrigger.Conditions>
                                                                                                <Setter Property="Fill" TargetName="ArrowRight" Value="{StaticResource ScrollBar.Pressed.Glyph}"/>
                                                                                            </MultiDataTrigger>
                                                                                            <MultiDataTrigger>
                                                                                                <MultiDataTrigger.Conditions>
                                                                                                    <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineLeftButton, Mode=OneWay}" Value="true"/>
                                                                                                    <Condition Binding="{Binding IsPressed, ElementName=PART_LineLeftButton, Mode=OneWay}" Value="true"/>
                                                                                                </MultiDataTrigger.Conditions>
                                                                                                <Setter Property="Fill" TargetName="ArrowLeft" Value="{StaticResource ScrollBar.Pressed.Glyph}"/>
                                                                                            </MultiDataTrigger>
                                                                                            <MultiDataTrigger>
                                                                                                <MultiDataTrigger.Conditions>
                                                                                                    <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineRightButton, Mode=OneWay}" Value="true"/>
                                                                                                    <Condition Binding="{Binding IsPressed, ElementName=PART_LineRightButton, Mode=OneWay}" Value="false"/>
                                                                                                </MultiDataTrigger.Conditions>
                                                                                                <Setter Property="Fill" TargetName="ArrowRight" Value="{StaticResource ScrollBar.MouseOver.Glyph}"/>
                                                                                            </MultiDataTrigger>
                                                                                            <MultiDataTrigger>
                                                                                                <MultiDataTrigger.Conditions>
                                                                                                    <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineLeftButton, Mode=OneWay}" Value="true"/>
                                                                                                    <Condition Binding="{Binding IsPressed, ElementName=PART_LineLeftButton, Mode=OneWay}" Value="false"/>
                                                                                                </MultiDataTrigger.Conditions>
                                                                                                <Setter Property="Fill" TargetName="ArrowLeft" Value="{StaticResource ScrollBar.MouseOver.Glyph}"/>
                                                                                            </MultiDataTrigger>
                                                                                            <Trigger Property="IsEnabled" Value="false">
                                                                                                <Setter Property="Fill" TargetName="ArrowLeft" Value="{StaticResource ScrollBar.Disabled.Glyph}"/>
                                                                                                <Setter Property="Fill" TargetName="ArrowRight" Value="{StaticResource ScrollBar.Disabled.Glyph}"/>
                                                                                            </Trigger>
                                                                                        </ControlTemplate.Triggers>
                                                                                    </ControlTemplate>
                                                                                </Setter.Value>
                                                                            </Setter>
                                                                        </Trigger>
                                                                    </Style.Triggers>
                                                                </Style>
                                                            </ControlTemplate.Resources>
                                                            <Grid Background="{x:Null}" ClipToBounds="True">
                                                                <ScrollViewer VerticalAlignment="Top" Height="42" Focusable="False" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden">
                                                                    <GridViewHeaderRowPresenter UseLayoutRounding="True" AllowsColumnReorder="{Binding TemplatedParent.View.AllowsColumnReorder, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" ColumnHeaderContainerStyle="{Binding TemplatedParent.View.ColumnHeaderContainerStyle, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" ColumnHeaderToolTip="{Binding TemplatedParent.View.ColumnHeaderToolTip, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" ColumnHeaderContextMenu="{Binding TemplatedParent.View.ColumnHeaderContextMenu, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" ColumnHeaderTemplate="{Binding TemplatedParent.View.ColumnHeaderTemplate, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" Columns="{Binding TemplatedParent.View.Columns, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" SnapsToDevicePixels="True">
                                                                        <GridViewHeaderRowPresenter.CacheMode>
                                                                            <BitmapCache/>
                                                                        </GridViewHeaderRowPresenter.CacheMode>
                                                                    </GridViewHeaderRowPresenter>
                                                                </ScrollViewer>
                                                                <ScrollContentPresenter x:Name="PART_ScrollContentPresenter" CanContentScroll="True" CanHorizontallyScroll="True" CanVerticallyScroll="True" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" KeyboardNavigation.DirectionalNavigation="Local" UseLayoutRounding="True" Margin="0,42,0,0">
                                                                    <ScrollContentPresenter.CacheMode>
                                                                        <BitmapCache/>
                                                                    </ScrollContentPresenter.CacheMode>
                                                                </ScrollContentPresenter>
                                                                <ScrollBar x:Name="PART_HorizontalScrollBar" Maximum="{TemplateBinding ScrollableWidth}" Minimum="0" Orientation="Horizontal" Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportWidth}" VerticalAlignment="Bottom" Margin="15,0,0,0" Height="12" Opacity="0.3" Style="{DynamicResource ScrollBarStyle1}">
                                                                    <ScrollBar.CacheMode>
                                                                        <BitmapCache/>
                                                                    </ScrollBar.CacheMode>
                                                                </ScrollBar>
                                                                <ScrollBar x:Name="PART_VerticalScrollBar" Maximum="{TemplateBinding ScrollableHeight}" Minimum="0" Orientation="Vertical" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportHeight}" HorizontalAlignment="Left" Margin="0,38,0,0" Opacity="0.3" Width="12" Style="{DynamicResource ScrollBarStyle1}">
                                                                    <ScrollBar.CacheMode>
                                                                        <BitmapCache/>
                                                                    </ScrollBar.CacheMode>
                                                                </ScrollBar>
                                                            </Grid>
                                                            <ControlTemplate.Triggers>
                                                                <EventTrigger RoutedEvent="UIElement.MouseEnter" SourceName="PART_HorizontalScrollBar">
                                                                    <BeginStoryboard x:Name="PART_HorizontalScrollBarOn_BeginStoryboard" Storyboard="{StaticResource PART_HorizontalScrollBarOn}"/>
                                                                </EventTrigger>
                                                                <EventTrigger RoutedEvent="UIElement.MouseEnter" SourceName="PART_VerticalScrollBar">
                                                                    <BeginStoryboard x:Name="PART_VerticalScrollBarOn_BeginStoryboard" Storyboard="{StaticResource PART_VerticalScrollBarOn}"/>
                                                                </EventTrigger>
                                                                <EventTrigger RoutedEvent="UIElement.MouseLeave" SourceName="PART_HorizontalScrollBar">
                                                                    <BeginStoryboard x:Name="PART_HorizontalScrollBarOff_BeginStoryboard" Storyboard="{StaticResource PART_HorizontalScrollBarOff}"/>
                                                                </EventTrigger>
                                                                <EventTrigger RoutedEvent="UIElement.MouseLeave" SourceName="PART_VerticalScrollBar">
                                                                    <BeginStoryboard x:Name="PART_VerticalScrollBarOff_BeginStoryboard" Storyboard="{StaticResource PART_VerticalScrollBarOff}"/>
                                                                </EventTrigger>
                                                            </ControlTemplate.Triggers>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                            </Style>
                                        </ScrollViewer.Resources>
                                        <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                    </ScrollViewer>
                                    <ControlTemplate.Triggers>
                                        <MultiTrigger>
                                            <MultiTrigger.Conditions>
                                                <Condition Property="IsGrouping" Value="true"/>
                                                <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false"/>
                                            </MultiTrigger.Conditions>
                                            <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                                        </MultiTrigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                    <Style TargetType="{x:Type ListViewItem}" >
                        <Setter Property="ContextMenu" Value="{DynamicResource ItemMenu}"/>
                        <EventSetter Event="MouseDoubleClick" Handler="ListBoxItem_MouseDoubleClick"/>
                        <EventSetter Event="KeyDown" Handler="ListBoxItem_KeyDown"/>
                        <Setter Property="Height" Value="45" />
                        <Setter Property="MaxHeight" Value="45" />
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type ListViewItem}">
                                    <Grid UseLayoutRounding="True" Background="#01000000" x:Name="Bg">
                                        <Grid.CacheMode>
                                            <BitmapCache/>
                                        </Grid.CacheMode>
                                        <GridViewRowPresenter VerticalAlignment="Bottom" IsHitTestVisible="False" UseLayoutRounding="True"/>
                                        <Rectangle x:Name="Ln" Height="1" Fill="{DynamicResource Theme_PlaylistItem_Item_Normal_Border}" VerticalAlignment="Bottom" IsHitTestVisible="False"/>
                                    </Grid>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsMouseOver" Value="true">
                                            <Setter TargetName="Bg" Property="Background" Value="#22000000"/>
                                            <Setter TargetName="Ln" Property="Fill" Value="{DynamicResource Theme_PlaylistItem_Item_Hover_Border}"/>
                                        </Trigger>
                                        <MultiTrigger>
                                            <MultiTrigger.Conditions>
                                                <Condition Property="IsSelected" Value="true" />
                                                <Condition Property="Selector.IsSelectionActive" Value="true" />
                                            </MultiTrigger.Conditions>
                                            <Setter TargetName="Bg" Property="Background" Value="#42000000"/>
                                            <Setter TargetName="Ln" Property="Fill" Value="{DynamicResource Theme_PlaylistItem_Item_Clicked_Border}"/>
                                        </MultiTrigger>
                                        <MultiTrigger>
                                            <MultiTrigger.Conditions>
                                                <Condition Property="IsSelected" Value="true" />
                                                <Condition Property="Selector.IsSelectionActive" Value="false" />
                                            </MultiTrigger.Conditions>
                                            <Setter TargetName="Bg" Property="Background" Value="#42000000"/>
                                            <Setter TargetName="Ln" Property="Fill" Value="{DynamicResource Theme_PlaylistItem_Item_Clicked_Border}"/>
                                        </MultiTrigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </ListView.Resources>
                <ListView.View>
                    <GridView>
                        <GridViewColumn Header="" Width="62">
                            <GridViewColumn.CellTemplate>
                                <DataTemplate>
                                    <Grid VerticalAlignment="Bottom" MinWidth="53" IsHitTestVisible="False">
                                        <Rectangle Width="41" Height="41" Fill="{Binding AlbumArt, Mode=OneWay}" HorizontalAlignment="Center" RenderOptions.BitmapScalingMode="LowQuality" RenderOptions.CachingHint="Cache"/>
                                        <Image Width="41" Height="41" HorizontalAlignment="Center" RenderOptions.BitmapScalingMode="LowQuality" RenderOptions.CachingHint="Cache" Source="/Symphony;component/Images/sym3_playlist_icon_border.png"/>
                                        <Rectangle Width="41" Height="41" Fill="{StaticResource Brush_Play}" Visibility="{Binding AlbumArtCover, Mode=OneWay}" HorizontalAlignment="Center" RenderOptions.BitmapScalingMode="LowQuality" RenderOptions.CachingHint="Cache"/>
                                    </Grid>
                                </DataTemplate>
                            </GridViewColumn.CellTemplate>
                        </GridViewColumn>
                        <GridViewColumn Header="{DynamicResource Lang_Playlist_Title}" Width="310">
                            <GridViewColumn.CellTemplate>
                                <DataTemplate>
                                    <local:ShadowedTextBlock Text="{Binding Title, Mode=OneWay}" UseLayoutRounding="True" IsHitTestVisible="False" Shadow="{DynamicResource Theme_PlaylistItem_List_Text_Shadow}" Foreground="{DynamicResource Theme_PlaylistItem_List_Text}" FontFamily="NanumBarunGothic Light" FontSize="12" TextOptions.TextFormattingMode="Ideal" TextOptions.TextHintingMode="Fixed" TextOptions.TextRenderingMode="ClearType"/>
                                </DataTemplate>
                            </GridViewColumn.CellTemplate>
                        </GridViewColumn>
                        <GridViewColumn Header="{DynamicResource Lang_Playlist_Artist}" Width="182">
                            <GridViewColumn.CellTemplate>
                                <DataTemplate>
                                    <local:ShadowedTextBlock Text="{Binding Artist, Mode=OneWay}" UseLayoutRounding="True" IsHitTestVisible="False" Shadow="{DynamicResource Theme_PlaylistItem_List_Text_Shadow}" Foreground="{DynamicResource Theme_PlaylistItem_List_Text}" FontFamily="NanumBarunGothic Light" FontSize="12" TextOptions.TextFormattingMode="Ideal" TextOptions.TextHintingMode="Fixed" TextOptions.TextRenderingMode="Grayscale"/>
                                </DataTemplate>
                            </GridViewColumn.CellTemplate>
                        </GridViewColumn>
                        <GridViewColumn Header="{DynamicResource Lang_Playlist_Album}" Width="182">
                            <GridViewColumn.CellTemplate>
                                <DataTemplate>
                                    <local:ShadowedTextBlock Text="{Binding Album, Mode=OneWay}" UseLayoutRounding="True" IsHitTestVisible="False" Shadow="{DynamicResource Theme_PlaylistItem_List_Text_Shadow}" Foreground="{DynamicResource Theme_PlaylistItem_List_Text}" FontFamily="NanumBarunGothic Light" FontSize="12" TextOptions.TextFormattingMode="Ideal" TextOptions.TextHintingMode="Fixed" TextOptions.TextRenderingMode="Grayscale"/>
                                </DataTemplate>
                            </GridViewColumn.CellTemplate>
                        </GridViewColumn>
                        <!--<GridViewColumn Header="파일 이름" Width="220">
                            <GridViewColumn.CellTemplate>
                                <DataTemplate>
                                    <TextBlock UseLayoutRounding="True" Text="{Binding FileName, Mode=OneWay}" SnapsToDevicePixels="True" FontFamily="NanumBarunGothic" TextOptions.TextFormattingMode="Display" TextOptions.TextHintingMode="Fixed" TextOptions.TextRenderingMode="Grayscale" FontSize="12">
                                        <TextBlock.Effect>
                                            <DropShadowEffect BlurRadius="0" ShadowDepth="1" Opacity="0.66" Direction="270" />
                                        </TextBlock.Effect>
                                    </TextBlock>
                                </DataTemplate>
                            </GridViewColumn.CellTemplate>
                        </GridViewColumn>
                        <GridViewColumn Header="앨범 - 아티스트" Width="280">
                            <GridViewColumn.CellTemplate>
                                <DataTemplate>
                                    <TextBlock UseLayoutRounding="True" Text="{Binding Album_Artist, Mode=OneWay}" SnapsToDevicePixels="True" FontFamily="NanumBarunGothic" TextOptions.TextFormattingMode="Display" TextOptions.TextHintingMode="Fixed" TextOptions.TextRenderingMode="Grayscale" FontSize="12">
                                        <TextBlock.Effect>
                                            <DropShadowEffect BlurRadius="0" ShadowDepth="1" Opacity="0.66" Direction="270" />
                                        </TextBlock.Effect>
                                    </TextBlock>
                                </DataTemplate>
                            </GridViewColumn.CellTemplate>
                        </GridViewColumn>
                        <GridViewColumn Header="코덱" Width="Auto">
                            <GridViewColumn.CellTemplate>
                                <DataTemplate>
                                    <TextBlock UseLayoutRounding="True" Text="{Binding Codec, Mode=OneWay}" SnapsToDevicePixels="True" FontFamily="NanumBarunGothic" TextOptions.TextFormattingMode="Display" TextOptions.TextHintingMode="Fixed" TextOptions.TextRenderingMode="Grayscale" FontSize="12">
                                        <TextBlock.Effect>
                                            <DropShadowEffect BlurRadius="0" ShadowDepth="1" Opacity="0.66" Direction="270" />
                                        </TextBlock.Effect>
                                    </TextBlock>
                                </DataTemplate>
                            </GridViewColumn.CellTemplate>
                        </GridViewColumn>
                        <GridViewColumn Header="비트레이트" Width="Auto">
                            <GridViewColumn.CellTemplate>
                                <DataTemplate>
                                    <TextBlock UseLayoutRounding="True" Text="{Binding Bitrate, Mode=OneWay}" SnapsToDevicePixels="True" FontFamily="NanumBarunGothic" TextOptions.TextFormattingMode="Display" TextOptions.TextHintingMode="Fixed" TextOptions.TextRenderingMode="Grayscale" FontSize="12">
                                        <TextBlock.Effect>
                                            <DropShadowEffect BlurRadius="0" ShadowDepth="1" Opacity="0.66" Direction="270" />
                                        </TextBlock.Effect>
                                    </TextBlock>
                                </DataTemplate>
                            </GridViewColumn.CellTemplate>
                        </GridViewColumn>
                        <GridViewColumn Header="샘플레이트" Width="Auto">
                            <GridViewColumn.CellTemplate>
                                <DataTemplate>
                                    <TextBlock UseLayoutRounding="True" Text="{Binding SampleRate, Mode=OneWay}" SnapsToDevicePixels="True" FontFamily="NanumBarunGothic" TextOptions.TextFormattingMode="Display" TextOptions.TextHintingMode="Fixed" TextOptions.TextRenderingMode="Grayscale" FontSize="12">
                                        <TextBlock.Effect>
                                            <DropShadowEffect BlurRadius="0" ShadowDepth="1" Opacity="0.66" Direction="270" />
                                        </TextBlock.Effect>
                                    </TextBlock>
                                </DataTemplate>
                            </GridViewColumn.CellTemplate>
                        </GridViewColumn>-->
                    </GridView>
                </ListView.View>
                <ListView.ItemsPanel>
                    <ItemsPanelTemplate>
                        <VirtualizingStackPanel x:Name="vsp" IsVirtualizing="True" VirtualizationMode="Recycling"/>
                    </ItemsPanelTemplate>
                </ListView.ItemsPanel>
            </ListView>
            <Grid x:Name="Grid_DragPanel" Visibility="Hidden" Opacity="0" UseLayoutRounding="True">
                <Border x:Name="Rect_Remove" CornerRadius="5,0,0,0" Drop="Rect_Remove_Drop" AllowDrop="True" Background="#28000000" Width="45" Margin="0,0,0,70" Height="70" VerticalAlignment="Center" HorizontalAlignment="Right" Opacity="1" IsHitTestVisible="True" RenderTransformOrigin="1,1">
                    <Border.RenderTransform>
                        <TransformGroup>
                            <ScaleTransform/>
                            <SkewTransform/>
                            <RotateTransform/>
                            <TranslateTransform/>
                        </TransformGroup>
                    </Border.RenderTransform>
                    <TextBlock IsHitTestVisible="False" UseLayoutRounding="True" Text="{DynamicResource Lang_Playlist_Panel_Trash}" VerticalAlignment="Center" HorizontalAlignment="Center" Foreground="White" FontSize="13" FontFamily="NanumBarunGothic Light">
                        <TextBlock.Effect>
                            <DropShadowEffect ShadowDepth="0" Opacity="0.75" BlurRadius="3"/>
                        </TextBlock.Effect>
                    </TextBlock>
                </Border>
                <Border x:Name="Rect_Cancel" CornerRadius="0,0,0,5" Drop="Rect_Cancel_Drop" AllowDrop="True" Background="#28000000" Width="45" Margin="0,70,0,0" Height="70" VerticalAlignment="Center" HorizontalAlignment="Right" Opacity="1" IsHitTestVisible="True" RenderTransformOrigin="1,0">
                    <Border.RenderTransform>
                        <TransformGroup>
                            <ScaleTransform/>
                            <SkewTransform/>
                            <RotateTransform/>
                            <TranslateTransform/>
                        </TransformGroup>
                    </Border.RenderTransform>
                    <TextBlock Text="{DynamicResource Lang_Playlist_Panel_Cancel}" UseLayoutRounding="True" IsHitTestVisible="False" VerticalAlignment="Center" HorizontalAlignment="Center" Foreground="White" FontSize="15" FontFamily="NanumBarunGothic Light">
                        <TextBlock.Effect>
                            <DropShadowEffect ShadowDepth="0" Opacity="0.75" BlurRadius="3"/>
                        </TextBlock.Effect>
                    </TextBlock>
                </Border>
                <Grid.CacheMode>
                    <BitmapCache/>
                </Grid.CacheMode>
            </Grid>
        </Grid>
        <Grid.CacheMode>
            <BitmapCache EnableClearType="False"/>
        </Grid.CacheMode>
    </Grid>
</UserControl>
